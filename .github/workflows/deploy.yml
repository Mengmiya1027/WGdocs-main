name: Build and Upload to LanZouCloud

on:
  push:
    branches: [ main, master ]  # 触发分支

jobs:
  build-upload:
    runs-on: ubuntu-latest
    steps:
      # 1. 检查代码
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # 2. 安装Node.js和依赖
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install Node dependencies
        run: npm ci
        id: install-node

      # 3. 构建Vitepress
      - name: Build Vitepress
        run: npm run docs:build
        working-directory: ${{ github.workspace }}
        id: build-vitepress
        continue-on-error: false

      # 4. 获取版本号和日期（北京时间）
      - name: Get version and Beijing time
        id: get-info
        run: |
          VERSION=$(node -p "require('./package.json').version")
          # 设置时区为北京时间并格式化日期
          DATE=$(TZ='Asia/Shanghai' date +'%Y-%m-%d')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "DATE=$DATE" >> $GITHUB_ENV
          echo "ZIP_NAME=${VERSION}-${DATE}.zip" >> $GITHUB_ENV

      # 5. 打包构建文件
      - name: Package dist files
        run: |
          # 进入构建目录并打包
          cd src/.vitepress/dist
          zip -r ../../../${{ env.ZIP_NAME }} .
          # 记录ZIP路径
          echo "ZIP_PATH=${{ github.workspace }}/${{ env.ZIP_NAME }}" >> $GITHUB_ENV
        id: package-zip

      # 6. 安装Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      # 7. 安装lanzou-api（从GitHub拉取最新版）
      - name: Install LanZouCloud-API
        run: |
          git clone https://github.com/zaxtyson/LanZouCloud-API.git
          cd LanZouCloud-API
          pip install -r requirements.txt
          pip install .
        id: install-lanzou

      # 8. 准备上传脚本
      - name: Create upload script
        run: |
          cat > upload_to_lanzou.py << 'EOF'
          import os
          import json
          from lanzou.api import LanZouCloud

          def main():
              # 读取环境变量
              lanzou_cookie = os.getenv('LANZOU_COOKIE')
              folder_id = os.getenv('LANZOU_FOLDER_ID')
              zip_path = os.getenv('ZIP_PATH')
              zip_name = os.getenv('ZIP_NAME')

              # 验证环境变量
              required_vars = [lanzou_cookie, folder_id, zip_path, zip_name]
              if None in required_vars or '' in required_vars:
                  raise ValueError("缺少必要的环境变量")

              # 解析Cookie
              try:
                  cookie_dict = json.loads(lanzou_cookie)
                  if not isinstance(cookie_dict, dict):
                      raise TypeError("Cookie必须是JSON对象")
              except json.JSONDecodeError:
                  raise ValueError("Cookie格式错误，不是有效的JSON")

              # 初始化客户端
              lzy = LanZouCloud()

              # 登录蓝奏云
              login_result = lzy.login_by_cookie(cookie_dict)
              if login_result != LanZouCloud.SUCCESS:
                  raise Exception(f"登录失败，错误码: {login_result}")
              print("✅ 蓝奏云登录成功")

              # 检查文件是否存在
              if not os.path.exists(zip_path):
                  raise FileNotFoundError(f"打包文件不存在: {zip_path}")

              # 上传文件
              print(f"开始上传文件: {zip_name}")
              upload_result = lzy.upload_file(zip_path, folder_id)
          
              # 处理上传结果
              if upload_result[0] != LanZouCloud.SUCCESS:
                  raise Exception(f"上传失败，错误码: {upload_result[0]}, 信息: {upload_result[1]}")
          
              print(f"✅ 上传成功！")
              print(f"文件ID: {upload_result[1]}")
              print(f"文件名: {upload_result[2]}")
              print(f"文件大小: {upload_result[3]} bytes")

          if __name__ == "__main__":
              try:
                  main()
              except Exception as e:
                  print(f"❌ 错误: {str(e)}")
                  exit(1)
          EOF
        id: create-script

      # 9. 登录并上传至蓝奏云
      - name: Upload to LanZouCloud
        env:
          LANZOU_COOKIE: ${{ secrets.LANZOU_COOKIE }}
          LANZOU_FOLDER_ID: ${{ secrets.LANZOU_FOLDER_ID }}
          ZIP_PATH: ${{ env.ZIP_PATH }}
          ZIP_NAME: ${{ env.ZIP_NAME }}
        run: python upload_to_lanzou.py
        id: upload-to-lanzou

      # 错误报告
      - name: Error summary
        if: failure()
        run: |
          echo "❌ 工作流执行失败"
          echo "失败步骤: ${{ failure() && github.job }}"